yum install docker
service docker start
service docker status
chkconfig docker on

docker run hello-world
docker run busybox:1.24 echo "hello world"
docker run hello-world  echo "hello world"

docker images
docker run busybox:1.24 echo "hello world"
docker run busybox:1.24 ping google.com
docker create hello-world
docker start -a container id  .... -a prints out container output to console
docker start -a container id will run default msg
docker system prune will remove all container
docker ps 
docker ps -all
docker images
docker build chandanchanchal/redis:latest .
docker run busybox:1.24 ls /
docker run -it busybox:1.24  .....-i and -t is for attachment for stdin and std out
touch a.txt
ls
exit
docker history busybox:1.24     ... layer info
docker run -it debian:jessie
apt-get update && apt-get install -y git
git
exit
docker ps -a
docker commit 111561b55427(this should be container id) chandanchanchal/chandan:1.00
docker images
docker run -it chandanchanchal/chandan:1.00
#docker push
docker images
docker tag  82e76bc3dfaa(this is image id for newer image) chandanchanchal/mytest:1.02
docker images
docker login --username=chandanchanchal
password
docker push chandanchanchal/test:1.01

***************************************NETWORKING****************************************
docker run -d --name c1 --net none busybox sleep 10000 # will keep container running for 10000 sec.
docker exec -it c1 /bin/ash # will attach a shell to container
#now check for network interfaces with ifconfig command ,you will find only loopback ip


#lets go with below command for checking out cidr of default bridge interface
docker netwrok inspect bridge
# now we will create one custom bridge interface named as my_bridge-network

docker network create --driver bridge my_bridge-network

docker run -d --name dbd1 busybox sleep 10000 # this will create dbd1 container to default bridge.
docker exec -it dbd1 /bin/ash # connect to container. # connect container via first terminal
docker run -d --net my_bridge-network --name cbd1 busybox sleep 10000 # this will create cbd1 container to custom bridge run this cmd to 2nd terminal
docker exec -it cbd1 /bin/ash # connect to container. # connect container via second terminal
# now ping dbd1 from cbd1 and vice versa and you will find neighter of them piniging to each other.
docker network connect bridge cbd1 # connect cbd1 to default bridge and you will find ping got started. connect command we
# have to run for second container too if we want to ping from second to first one.
docker network connect my_bridge-network dbd1 
# now ping from dbd1 to cbd1 and vise versa it will not get pingeed eighter way.
docker network disconnect bridge cbd1 # to stop ping

docker run -d --name hc1 --net host busybox sleep 10000 # will create hc1 to host interface 
docker exec -it hc1 /bin/ash # connect to container. and run ifconfig you will find all host network interfaces are here

# create two container and associate them to same default bridge network and do the ping test

swarm######################
docker info
docker swarm init
docker node ls
docker service COMMAND
docker service create alpine ping 8.8.8.8
docker service ls
docker service ps sad_ptolemy
docker container ls
docker service update fdfeidiidie(service id) --replicas 3
docker service ls
docker ps service_name
docker service  ps peaceful_wilson
docker update --help
docker service update --help
docker container ls
docker container rm -f frosty_newton
docker service ls




